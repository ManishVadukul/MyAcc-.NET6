@model Tuple<IEnumerable<SelectListItem>, IEnumerable<SelectListItem>, IEnumerable<SelectListItem>>
@{
    ViewData["Title"] = "Home Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .modal-lg, .modal-xl {
        max-width: 1200px;
    }
</style>
<fieldset>
    <div class="row">
        <div class="col-md-4"><fieldset><legend>Create New Order/Invoice</legend></fieldset></div>
        <div class="col-md-4"></div>
        <div class="col-md-4 text-right">
            <fieldset>
                <legend>
                    <a asp-action="index" asp-controller="order" class="btn btn-warning">
                        Back To Sales/Invoice Order List
                    </a>
                </legend>
            </fieldset>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                Company Name
                @Html.DropDownList("Customer", new SelectList(Model.Item1, "Value", "Text"),
                   new { @class = "form-control" })
            </div>
        </div>

        @*<div class="col-md-4">
                <div class="form-group">
                    Payment :
                    @Html.DropDownList("PaymentType", new SelectList(Model.Item3, "Value", "Text"),
                        new { @class = "form-control" })
                </div>
            </div>*@

        <div class="col-md-4">
            <div class="form-group">
                Customer Delivery Address
                <input type="text" id="txtDeliveryAddress" name="DeliveryAddress" class="form-control" />
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                Customer Billing Address
                <input type="text" id="txtBillingAddress" readonly="readonly" name="BillingAddress" class="form-control" />
            </div>
        </div>



        <div class="col-md-4">
            <div class="form-group">
                Customer Name
                <input type="text" id="txtFullName" readonly="readonly" name="FullName" class="form-control" />
            </div>
        </div>

        <div class="col-md-4">
            <div class="form-group">
                Total:
                <input type="text" style="text-align:right" id="txtFinalTotal" value="0.00" readonly="readonly" name="FinalTotal" class="form-control" />
                <input type="text" style="text-align:right" id="txtTotalVAT" value="0.00" readonly="readonly" name="TotalVAT" hidden />
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                Order Number
                <input type="text" id="txtOrderNo" readonly="readonly" name="OrderNo" class="form-control" />
            </div>
        </div>

    </div>
</fieldset>



<input data-toggle="modal" data-target="#divAddProduct" type="button" value="Add Item Item" name="ProductItem" id="btnAddProductItem" class="btn btn-primary" />

<hr />
<fieldset>
    <table class="table table-bordered table-active" id="tblProductItem">
        <thead>
            <tr class="text-center">
                <th hidden="hidden">Item Id</th>
                <th class="text-left">Item Name</th>
                <th>Unit</th>
                <th>Weight</th>
                <th>Cost</th>
                <th>Price</th>
                <th>Qty</th>
                <th>Tax%</th>
                <th>VAT</th>
                <th>Total</th>
                <th></th>
            </tr>
        </thead>
    </table>
</fieldset>
<hr />
<div class="row">
    <!--<div class="col-6"></div>
        <div class="col-2" style="margin-left:40px">-->
    @*<div class="form-group">
            <table>
                <tr>
                    <td>Total:</td>
                    <td><input type="text" style="text-align:right" id="txtFinalTotal" value="0.00" readonly="readonly" name="FinalTotal" class="form-control" /></td>

                </tr>
            </table>

        </div>*@
    <!--</div>-->
    <div class="col-md-12 text-right">
        @*<input  data-toggle="modal" data-target="#divPayment" type="button" value="Order Payment" name="Checkout" id="btnCheckOut" class="btn btn-primary btn-block" />*@
        <input type="button" value="Save Order" name="Checkout" id="btnCheckOut" class="btn btn-primary" />
    </div>
</div>
<hr />

<div class="modal" tabindex="-1" role="dialog" id="divAddProduct" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select product for order</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>Select Item</th>
                                <th>Unit</th>
                                <th>Weight</th>
                                <th>Cost</th>
                                <th>Price</th>
                                <th>Qty</th>
                                <th>Tax%</th>
                                <th>VAT</th>
                                <th>Total</th>
                            </tr>
                            <tr>
                                <td>
                                    @Html.DropDownList("Product", new SelectList(Model.Item2, "Value", "Text"), new { style = "width:300px; border-radius:0px;" })
                                </td>
                                <td><input type="text" id="txtUnitName" readonly="readonly" name="Unitname" class="form-control" /></td>
                                <td><input type="text" id="txtWeight" style="text-align:right" value="0.00" readonly="readonly" name="Weight" class="form-control" /></td>
                                <td><input type="text" id="txtCost" style="text-align:right" value="0.00" readonly="readonly" name="Cost" class="form-control" /></td>
                                <td><input type="text" id="txtUnitPrice" style="text-align:right" value="0.00" name="Price" class="form-control" /></td>
                                <td><input type="text" id="txtQty" style="text-align:right" value="0" name="Qty" class="form-control" /></td>
                                <td><input type="text" id="txtTax" style="text-align:right" value="0.00" readonly="readonly" name="Tax" class="form-control" /></td>
                                <td><input type="text" id="txtVat" style="text-align:right" value="0.00" readonly="readonly" name="Vat" class="form-control" /></td>
                                <td><input type="text" id="txtTotal" style="text-align:right" value="0.00" readonly="readonly" name="Total" class="form-control" /></td>

                            </tr>
                        </thead>
                    </table>
                </div>
            </div>

            <div class="modal-footer">
                <input type="button" id="btnAddToList" value="Add Item" name="AddToList" class="btn btn-success" />
                <button class="btn btn-danger" id="btnClose" data-dismiss="modal" value="close">Close</button>
            </div>

        </div>
    </div>
</div>

<div class="modal" tabindex="-1" role="dialog" id="divPayment" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Payment</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="form-group col-md-6">
                        Payment Total :
                        <input id="txtPaymentTotal" style="text-align:right" readonly="readonly" type="text" value="0.00" class="form-control" />
                    </div>
                    <div class="form-group col-md-6">
                        Payment Amount :
                        <input id="txtPaymentAmount" style="text-align:right" type="text" value="0.00" class="form-control" />
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-6">
                        Return Total :
                        <input id="txtReturnTotal" style="text-align:right" type="text" value="0.00" class="form-control" />
                    </div>
                    <div class="form-group col-md-6">
                        Balance Amount :
                        <input id="txtBalance" style="text-align:right" readonly="readonly" type="text" value="0.00" class="form-control" />
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button class="btn btn-success" id="btnPayment" value="Payment">Payment</button>
                <button class="btn btn-danger" id="btnClose" data-dismiss="modal" value="close">Close</button>

            </div>

        </div>
    </div>
</div>


@section Scripts{
   
    <script>



        $(document)
            .ready(function () {
                $("#Product").val(0);
                $("#Product").change(function () {
                    var productId = $("#Product").val();
                    GetProductDataByProductId(productId);
                });

                $("#Product").select2();



                $("#Customer").val(0);
                $("#Customer").change(function () {
                    var customerId = $("#Customer").val();
                    GetCustomerDataByCustomerId(customerId);
                });

                GetOrderNumberGenerate();

                $("input[type=text]").change(function () {
                    CalculateSubTotal();
                });

                $("input[type=text]").keyup(function () {
                    CalculationBalance();
                });

                function keypressHandler(e) {
                    if (e.which == 13) {
                        e.preventDefault(); //stops default action: submitting form
                        $(this).blur();
                        $("#btnAddToList").focus().click();//give your submit an ID
                    }
                }

                //  $('#btnAddToList').keypress(keypressHandler);

                $("#btnAddToList").click(function () {
                    AddToTheItemList();
                })
                /* stopping payment modal
                $("#btnPayment").click(function () {
                    FinalPayment();
                });*/

                $("#btnCheckOut").click(function () {
                    FinalPayment();
                });


            });


        function FinalPayment() {
            var objOrderViewModel = {};

            var ListOfOrderDetailViewModel = new Array();

            //ListOfOrderDetailViewModel

            objOrderViewModel.PaymentTypeId = $("#PaymentType").val();
            objOrderViewModel.CustomerId = $("#Customer").val();
            objOrderViewModel.FinalTotal = $("#txtFinalTotal").val();
            objOrderViewModel.OrderNo = $("#txtOrderNo").val();
            objOrderViewModel.TotalVAT = $("#txtTotalVAT").val();


            $("#tblProductItem").find("tr:gt(0)").each(function () {
                var OrderDetailViewModel = {};
                OrderDetailViewModel.Total = parseFloat($(this).find("td:eq(9)").text());
                OrderDetailViewModel.VAT = parseFloat($(this).find("td:eq(8)").text());
                OrderDetailViewModel.ProductId = parseFloat($(this).find("td:eq(0)").text());
                OrderDetailViewModel.ProductName = $(this).find("td:eq(1)").text();
                OrderDetailViewModel.Unitname = $(this).find("td:eq(2)").text();
                OrderDetailViewModel.Weight = parseFloat($(this).find("td:eq(3)").text());
                OrderDetailViewModel.Cost = parseFloat($(this).find("td:eq(4)").text());
                OrderDetailViewModel.Price = parseFloat($(this).find("td:eq(5)").text());
                OrderDetailViewModel.Qty = parseFloat($(this).find("td:eq(6)").text());
                OrderDetailViewModel.Tax = parseFloat($(this).find("td:eq(7)").text());
                ListOfOrderDetailViewModel.push(OrderDetailViewModel);
            });
            objOrderViewModel.ListOfOrderDetailViewModel = ListOfOrderDetailViewModel;


            //var dataObject = JSON.stringify({
            //    'FieldA': $("#PaymentType").val(),
            //    'FieldB': $("#Customer").val(),
            //    'FieldC': $("#txtFinalTotal").val()
            //});
            //$.ajax({
            //    url: '/Home/Index/',
            //    data: JSON.stringify(objOrderViewModel),
            //    contentType: 'application/json',
            //    type: 'POST',
            //    success: function (data) {
            //        alert(data);
            //    },
            //    error: function () {
            //        alert("There is some problem to adding the data");
            //    }

            //});
            $.ajax({
                async: true,
                type: 'POST',
                dataType: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: JSON.stringify(objOrderViewModel),
                url: '/Order/Create/',
                success: function (data) {
                    alert(data);
                    window.location.href = "../Order/Index";
                },
                error: function () {
                    alert("There is some problem to adding the data");
                }

            });
        }



        function CalculationBalance() {
            var FinalAmount = $("#txtPaymentTotal").val();
            var PaymentAmount = $("#txtPaymentAmount").val();
            var ReturnAmount = $("#txtReturnTotal").val();
            var BalanceAmount = parseFloat(FinalAmount) - parseFloat(PaymentAmount) + parseFloat(ReturnAmount);
            $("#txtBalance").val(parseFloat(BalanceAmount).toFixed(2));

            if (parseFloat(BalanceAmount) >= 0) {
                $("#btnPayment").removeAttr("disabled");
            }
            else {
                $("#btnPayment").attr("disabled", "disabled");
            }
        }


        function RemoveItem(productId) {
            $(productId).closest('tr').remove();
            FinalTotal();
        }

        function AddToTheItemList() {
            var tblProductItemList = $("#tblProductItem");
            var Cost = $("#txtCost").val();
            var UnitPrice = $("#txtUnitPrice").val();
            var Qty = $("#txtQty").val();
            var Tax = $("#txtTax").val();
            var ProductId = $("#Product").val();
            var UnitName = $("#txtUnitName").val();
            var Weight = $("#txtWeight").val();
            var ItemName = $("#Product option:selected").text();
            var Vat = (Number(UnitPrice) * Number(Qty) * Number(Tax)) / 100;
            var taxc = (Number(UnitPrice) * Number(Qty) * Number(Tax)) / 100;
            var Total = Number(UnitPrice) * Number(Qty) + Number(taxc);


            var ItemList = "<tr><td hidden>" +
                ProductId + "</td><td>" +
                ItemName + "</td><td style='width:10px;' class='text-right'>" +
                UnitName + "</td><td style='width:10px;' class='text-right'>" +
                Weight + "</td><td style='width:10px;' class='text-right'>" +
                Cost + "</td><td style='width:10px;' class='text-right'>" +
                parseFloat(UnitPrice).toFixed(2) + "</td><td style='width:20px;' class='text-right'>" +
                Qty + "</td><td style='width:10px;' class='text-right'>" +
                parseFloat(Tax).toFixed(2) + "</td><td style='width:10px;' class='text-right'>" +
                parseFloat(Vat).toFixed(2) + "</td><td style='width:10px;' class='text-right'>" +
                parseFloat(Total).toFixed(2) + "</td><td style='width:120px;' style='width:10px;'> <button type='button' value='Remove' name='remove'  style=' border:none;'  onclick='RemoveItem(this)'><i style='color:red;' class='fas fa-times - alt'></i></button </tr></tr>";

            tblProductItemList.append(ItemList);
            FinalTotal();
            ResetItem();
        }

        function FinalTotal() {
            $("#txtFinalTotal").val("0.00");
            var FinalTotal = 0.00;
            $("#tblProductItem").find("tr:gt(0)").each(function () {
                var Total = parseFloat($(this).find("td:eq(9)").text());
                FinalTotal += Total;
                //alert(FinalTotal);
            });
            $("#txtFinalTotal").val(parseFloat(FinalTotal).toFixed(2));
            $("#txtPaymentTotal").val(parseFloat(FinalTotal).toFixed(2));
            $("#txtBalance").val(parseFloat(FinalTotal).toFixed(2));



            $("#txtTotalVAT").val("0.00");
            var TotalVAT = 0.00;
            $("#tblProductItem").find("tr:gt(0)").each(function () {
                var Total = parseFloat($(this).find("td:eq(8)").text());
                TotalVAT += Total;
                //alert(FinalTotal);
            });
            $("#txtTotalVAT").val(parseFloat(TotalVAT).toFixed(2));
        }

        function ResetItem() {
            $("#txtCost").val("");
            $("#txtUnitPrice").val("");
            $("#txtQty").val("");
            $("#txtTax").val("");
            $("#Product").val(0);
            $("#txtVat").val("");
            $("#txtTotal").val("");
            $("#txtUnitName").val("");
            $("#txtWeight").val(0);
        }

        function CalculateSubTotal() {
            var UnitPrice = $("#txtUnitPrice").val();
            var Qty = $("#txtQty").val();
            var Tax = $("#txtTax").val();



            //if (Tax == 0.00) {
            //    var Total = UnitPrice * Qty;
            //}
            //else if (Tax == 20)
            //{
            //    var taxc = (Number(UnitPrice) * Number(Qty) * 20) / 100;
            //    var Total = Number(UnitPrice) * Number(Qty) + Number(taxc);

            //}
            //else if (Tax == 15) {
            //    var taxc = (Number(UnitPrice) * Number(Qty) * 20) / 100;
            //    var Total = Number(UnitPrice) * Number(Qty) + Number(taxc);
            //}
            var Vat = (Number(UnitPrice) * Number(Qty) * Number(Tax)) / 100;
            var taxc = (Number(UnitPrice) * Number(Qty) * Number(Tax)) / 100;
            var Total = Number(UnitPrice) * Number(Qty) + Number(taxc);

            $("#txtVat").val(parseFloat(Vat).toFixed(2));
            $("#txtTotal").val(parseFloat(Total).toFixed(2));
        }

        function GetProductDataByProductId(productId) {
            $.ajax({
                async: true,
                type: 'GET',
                dataT: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: { productid: productId },
                url: '/Order/GetProductDataByProductId',
                success: function (data) {
                    var vdata = data;
                    $("#txtUnitPrice").val(vdata[0].price);
                    $("#txtCost").val(vdata[0].cost);
                    $("#txtTax").val(vdata[0].tax);
                    $("#txtUnitName").val(vdata[0].unitname);
                    $("#txtWeight").val(vdata[0].weight);
                },
                error: function () {
                    alert("There is some problem to get the Unit Price.")
                }
            })
        }

        function GetCustomerDataByCustomerId(customerId) {
            $.ajax({
                async: true,
                type: 'GET',
                dataT: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: { customerId: customerId },
                url: '/Order/GetCustomerDataByCustomerId',
                success: function (data) {
                    var vdata = data;
                    //alert(vdata[0].fullName);
                    $("#txtBillingAddress").val(vdata[0].billingaddress);
                    $("#txtDeliveryAddress").val(vdata[0].deliveryaddress);
                    $("#txtFullName").val(vdata[0].fullname);
                },
                error: function () {
                    alert("There is some problem to get the customer address.")
                }
            })
        }

        function GetOrderNumberGenerate() {
            $.ajax({
                async: true,
                type: 'GET',
                dataT: 'JSON',
                contentType: 'application/json; charset=utf-8',
                data: {},
                url: '/Order/GetOrderNumberGenerate',
                success: function (data) {
                    var vdata = data;
                    $("#txtOrderNo").val(vdata);
                },
                error: function () {
                    alert("There is some problem generating new order number.")
                }
            })
        }

    </script>
    <partial name="_ValidationScriptsPartial.cshtml" />
}

